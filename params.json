{"name":"mod_mruby","tagline":"mod_mruby - A Web Server Extension Mechanism Using mruby to provide an alternative to mod_lua","body":"# Welcome to the mod_mruby wiki!\r\n## What's mod_mruby\r\n__mod_murby is A Fast and Memory-Efficient Web Server Extension Mechanism Using Scripting Language mruby for Apache httpd.__\r\n\r\n- You can implement Apache modules by Ruby script on Apache HTTP Server with mod_mruby.\r\n- mod_mruby is to provide an alternative to mod_lua or [ngx_mruby of nginx](http://matsumoto-r.github.io/ngx_mruby/).\r\n- Supported Apache Version: __2.0 2.2 2.4 2.5__\r\n- Supported Apache MPM: __worker prefork event__\r\n- Supported OS: __Linux FreeBSD Windows__ and so on.\r\n\r\n```ruby\r\n# Apache httpd.conf\r\n# mrubyTranslateNameMiddle \"/path/to/proxy.rb\"\r\n#\r\n\r\nbackends = [\r\n  \"http://192.168.0.101:8888/\",\r\n  \"http://192.168.0.102:8888/\",\r\n  \"http://192.168.0.103:8888/\",\r\n  \"http://192.168.0.104:8888/\",\r\n]\r\n \r\n# write balancing algorithm here.\r\n\r\nr = Apache::Request.new()\r\n\r\nr.handler  = \"proxy-server\"\r\nr.proxyreq = Apache::PROXYREQ_REVERSE\r\nr.filename = \"proxy:\" + backends[rand(backends.length)] + r.uri\r\n\r\nApache::return(Apache::OK)\r\n```\r\n\r\n## How to use\r\n### 1. Download\r\n    git clone git://github.com/matsumoto-r/mod_mruby.git\r\n\r\n### 2. Auto Build\r\n    cd mod_mruby\r\n    sh build.sh\r\n\r\n### 3. Test Settings\r\n* Add to httpd.conf\r\n\r\n        LoadModule mruby_module modules/mod_mruby.so\r\n        AddHandler mruby-script .rb\r\n\r\n* test.rb copy   \r\n\r\n        cp -p test/test.rb $(APACHE_DOCMENT_ROOT)/.\r\n\r\n### 4. Apache Restart\r\n    service httpd restart\r\n\r\n### 5. Access URL by Browser\r\n    curl http://127.0.0.1/test.rb\r\n\r\n### Manual Build      \r\n* mruby/mruby build\r\n\r\n        cd mod_mruby\r\n        git submodule init\r\n        git submodule update\r\n        cd mruby\r\n        rake\r\n        cd ..\r\n\r\n* configure\r\n\r\n        ./configure\r\n\r\n* using mruby/mruby\r\n\r\n        make\r\n        make install\r\n\r\n## Example\r\n* Selecting vhost area like mod_vhost_alias(hook on translatename)\r\n    ```ruby\r\n    r = Apache::Request.new()\r\n    s = Apache::Server.new()\r\n\r\n    r.filename = s.document_root + \"/\" + r.hostname + \"/\" + r.uri\r\n\r\n    Apache::return(Apache::OK)\r\n    ```\r\n* Proxy balancer like mod_proxy_balancer(hook on translatename)\r\n    ```ruby\r\n    backends = [\r\n        \"http://192.168.0.101:8888/\",\r\n        \"http://192.168.0.102:8888/\",\r\n        \"http://192.168.0.103:8888/\",\r\n        \"http://192.168.0.104:8888/\",\r\n    ]\r\n \r\n    # write balancing algorithm here.\r\n \r\n    r = Apache::Request.new()\r\n \r\n    r.handler  = \"proxy-server\"\r\n    r.proxyreq = Apache::PROXYREQ_REVERSE\r\n    r.filename = \"proxy:\" + backends[rand(backends.length)] + r.uri\r\n \r\n    Apache::return(Apache::OK)\r\n    ```\r\n\r\n## Functions\r\n* [Functions Page](https://github.com/matsumoto-r/mod_mruby/wiki/Functions)\r\n\r\n## Data Structure\r\n* [Data Structure Page](https://github.com/matsumoto-r/mod_mruby/wiki/Data-Structure)\r\n\r\n# License\r\nunder the MIT License:\r\n\r\n* http://www.opensource.org/licenses/mit-license.php\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}